//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zth.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Zth.Properties.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на А.
        /// </summary>
        public static string AmpereUnit {
            get {
                return ResourceManager.GetString("AmpereUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Амплитуда тока управления, мА.
        /// </summary>
        public static string AmplitudeControlCurrent {
            get {
                return ResourceManager.GetString("AmplitudeControlCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Амплитуда греющего тока, А.
        /// </summary>
        public static string AmplitudeHeatingCurrent {
            get {
                return ResourceManager.GetString("AmplitudeHeatingCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Амплитуда измерительного тока, мА.
        /// </summary>
        public static string AmplitudeMeasuringCurrent {
            get {
                return ResourceManager.GetString("AmplitudeMeasuringCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Темп. корпуса А.
        /// </summary>
        public static string AnodeBodyTemperature {
            get {
                return ResourceManager.GetString("AnodeBodyTemperature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на t корп. А:.
        /// </summary>
        public static string AnodeBodyTemperatureAbbreviated {
            get {
                return ResourceManager.GetString("AnodeBodyTemperatureAbbreviated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Темп. охл. А.
        /// </summary>
        public static string AnodeCoolerTemperature {
            get {
                return ResourceManager.GetString("AnodeCoolerTemperature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на t охл. А:.
        /// </summary>
        public static string AnodeCoolerTemperatureAbbreviated {
            get {
                return ResourceManager.GetString("AnodeCoolerTemperatureAbbreviated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Назад.
        /// </summary>
        public static string Back {
            get {
                return ResourceManager.GetString("Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Биполярный.
        /// </summary>
        public static string Bipolar {
            get {
                return ResourceManager.GetString("Bipolar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Нижняя граница экстраполяции, °С.
        /// </summary>
        public static string BottomLineExtrapolation {
            get {
                return ResourceManager.GetString("BottomLineExtrapolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Расчёт Rth.
        /// </summary>
        public static string CalculationRth {
            get {
                return ResourceManager.GetString("CalculationRth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Расчёт Zth.
        /// </summary>
        public static string CalculationZth {
            get {
                return ResourceManager.GetString("CalculationZth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Темп. корпуса К.
        /// </summary>
        public static string CathodeBodyTemperature {
            get {
                return ResourceManager.GetString("CathodeBodyTemperature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на t корп. К:.
        /// </summary>
        public static string CathodeBodyTemperatureAbbreviated {
            get {
                return ResourceManager.GetString("CathodeBodyTemperatureAbbreviated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Темп. охл. К.
        /// </summary>
        public static string CathodeCoolerTemperature {
            get {
                return ResourceManager.GetString("CathodeCoolerTemperature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на t охл. К:.
        /// </summary>
        public static string CathodeCoolerTemperatureAbbreviated {
            get {
                return ResourceManager.GetString("CathodeCoolerTemperatureAbbreviated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Охлаждение.
        /// </summary>
        public static string Cooling {
            get {
                return ResourceManager.GetString("Cooling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время задержки измерения ТЧП, мкс.
        /// </summary>
        public static string DelayTimeTspMeasurements {
            get {
                return ResourceManager.GetString("DelayTimeTspMeasurements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Длительность импульса мощности, с.
        /// </summary>
        public static string DurationPowerPulse {
            get {
                return ResourceManager.GetString("DurationPowerPulse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Экстраполяция.
        /// </summary>
        public static string Extrapolation {
            get {
                return ResourceManager.GetString("Extrapolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Градуировка.
        /// </summary>
        public static string Graduation {
            get {
                return ResourceManager.GetString("Graduation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Расчёт градуировки.
        /// </summary>
        public static string GraduationCalculation {
            get {
                return ResourceManager.GetString("GraduationCalculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Только градуировка.
        /// </summary>
        public static string GraduationOnly {
            get {
                return ResourceManager.GetString("GraduationOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Греющий ток.
        /// </summary>
        public static string HeatingCurrent {
            get {
                return ResourceManager.GetString("HeatingCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Гр. ток:.
        /// </summary>
        public static string HeatingCurrentAbbreviated {
            get {
                return ResourceManager.GetString("HeatingCurrentAbbreviated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Греющий ток, А.
        /// </summary>
        public static string HeatingCurrentWithUnitMeasurement {
            get {
                return ResourceManager.GetString("HeatingCurrentWithUnitMeasurement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Греющая мощн..
        /// </summary>
        public static string HeatingPower {
            get {
                return ResourceManager.GetString("HeatingPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IGBT.
        /// </summary>
        public static string IGBT {
            get {
                return ResourceManager.GetString("IGBT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на мВ.
        /// </summary>
        public static string MegaVoltUnit {
            get {
                return ResourceManager.GetString("MegaVoltUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Далее.
        /// </summary>
        public static string Next {
            get {
                return ResourceManager.GetString("Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Односторонее.
        /// </summary>
        public static string OneSided {
            get {
                return ResourceManager.GetString("OneSided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rth Последовательность.
        /// </summary>
        public static string RthSequence {
            get {
                return ResourceManager.GetString("RthSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сохранить в файл.
        /// </summary>
        public static string SaveInFile {
            get {
                return ResourceManager.GetString("SaveInFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Старт нагрев.
        /// </summary>
        public static string StartHeating {
            get {
                return ResourceManager.GetString("StartHeating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Стоп нагрев.
        /// </summary>
        public static string StopHeating {
            get {
                return ResourceManager.GetString("StopHeating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Стоп измерения.
        /// </summary>
        public static string StopMeasurement {
            get {
                return ResourceManager.GetString("StopMeasurement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ТЧП.
        /// </summary>
        public static string TemperatureSensitiveParameter {
            get {
                return ResourceManager.GetString("TemperatureSensitiveParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Температура структуры.
        /// </summary>
        public static string TemperatureStructure {
            get {
                return ResourceManager.GetString("TemperatureStructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Темп. структуры.
        /// </summary>
        public static string TemperatureStructureAbbreviated {
            get {
                return ResourceManager.GetString("TemperatureStructureAbbreviated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Время.
        /// </summary>
        public static string Time {
            get {
                return ResourceManager.GetString("Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Двухсторонее.
        /// </summary>
        public static string TwoWay {
            get {
                return ResourceManager.GetString("TwoWay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Тип устройства.
        /// </summary>
        public static string TypeDevice {
            get {
                return ResourceManager.GetString("TypeDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на А.
        /// </summary>
        public static string UnitMeasurementA {
            get {
                return ResourceManager.GetString("UnitMeasurementA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на °C.
        /// </summary>
        public static string UnitMeasurementDegreeCentigrade {
            get {
                return ResourceManager.GetString("UnitMeasurementDegreeCentigrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на °С/Вт.
        /// </summary>
        public static string UnitMeasurementDegreesCelsiusInWatts {
            get {
                return ResourceManager.GetString("UnitMeasurementDegreesCelsiusInWatts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на кВт.
        /// </summary>
        public static string UnitMeasurementkW {
            get {
                return ResourceManager.GetString("UnitMeasurementkW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на с.
        /// </summary>
        public static string UnitMeasurementSecond {
            get {
                return ResourceManager.GetString("UnitMeasurementSecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обновить задание.
        /// </summary>
        public static string UpdateTask {
            get {
                return ResourceManager.GetString("UpdateTask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Верхняя граница экстраполяции, °C.
        /// </summary>
        public static string UpperLineExtrapolation {
            get {
                return ResourceManager.GetString("UpperLineExtrapolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Режим работы.
        /// </summary>
        public static string WorkingMode {
            get {
                return ResourceManager.GetString("WorkingMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Zth(t).
        /// </summary>
        public static string Zth {
            get {
                return ResourceManager.GetString("Zth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ztha(t).
        /// </summary>
        public static string Ztha {
            get {
                return ResourceManager.GetString("Ztha", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Zthk(t).
        /// </summary>
        public static string Zthk {
            get {
                return ResourceManager.GetString("Zthk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Zth Длинный импульс.
        /// </summary>
        public static string ZthLongImpulse {
            get {
                return ResourceManager.GetString("ZthLongImpulse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Zth Последовательность.
        /// </summary>
        public static string ZthSequence {
            get {
                return ResourceManager.GetString("ZthSequence", resourceCulture);
            }
        }
    }
}
